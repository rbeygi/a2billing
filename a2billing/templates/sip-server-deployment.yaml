apiVersion: apps/v1
kind: Deployment
metadata:
  name: sip-server
  labels:
    app: sip-server
spec:
  selector:
    matchLabels:
      app: sip-server
  replicas: { { .Values.replicaCount } }
  strategy:
    type: RollingUpdate
  template:
    metadata:
      labels:
        app: sip-server
    spec:
      containers:
        - name: asterisk
          image: {{ .Values.asterisk.image }}
          envFrom:
            - configMapRef:
              name: asterisk-configmap
          env:
            - name: MYSQL_HOST
              valueFrom:
                configMapKeyRef:
                  name: mysql-configmap
                  key: MYSQL_HOST
            - name: MYSQL_PORT
              valueFrom:
                configMapKeyRef:
                  name: mysql-configmap
                  key: MYSQL_PORT
            - name: MYSQL_DATABASE
              valueFrom:
                configMapKeyRef:
                  name: mysql-configmap
                  key: MYSQL_DATABASE
            - name: MYSQL_USER
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_USER
            - name: MYSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: mysql-secret
                  key: MYSQL_PASSWORD
          ports:
            - containerPort: 5060
              protocol: UDP
            - containerPort: 5060
              protocol: TCP
          volumeMounts:
            - name: astrisk-config
              mountPath: /etc/asterisk
            - name: astrisk-data
              mountPath: /var/lib/asterisk
            - name: astrisk-data-spool
              mountPath: /var/spool/asterisk
      volumes:
        - name: asterisk-persistent-storage
          persistentVolumeClaim:
            claimName: asterisk-pv-claim

---

apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: asterisk-pv-claim
  labels:
    app: sip-server
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 30Gi